ar = [ 0x0D7, 0x0DB, 0x0DA, 0x0D2, 0x0DD, 0x0D0, 0x0D1, 0x0DA, 0x0C0, 0x0DD, 0x0D5, 0x0D8,
                0x0B4, 0x9E,  0xB4,  0x0C0, 0x0FC, 0x0FD, 0x0E7, 0x0B4, 0x0F1, 0x0EC, 0x0F1, 0x0F7,
                0x0E1, 0x0E0, 0x0F5, 0x0F6, 0x0F8, 0x0F1, 0x0B4, 0x0FD, 0x0E7, 0x0B4, 0x0D7, 0x0DD,
                0x0D5, 0x0B9, 0x0E4, 0x0FB, 0x0E3, 0x0F1, 0x0E6, 0x0F1, 0x0F0, 0x0BA, 0x0B4, 0x9E,
                0x0B4, 0x0C4, 0x0F8, 0x0F1, 0x0F5, 0x0E7, 0x0F1, 0x0B4, 0x0E7, 0x0F1, 0x0FA, 0x0F0,
                0x0B4, 0x0E0, 0x0FC, 0x0FD, 0x0E7, 0x0B4, 0x0DD, 0x0D0, 0x0AE, 0x0B4, 0x0F5, 0x0E3,
                0x0A7, 0x0E7, 0x0EE, 0x0A1, 0x0A3, 0x0AC, 0x0E0, 0x0ED, 0x0FC, 0x0F6, 0x0E4, 0x0A4,
                0x0FA, 0x0E1, 0x0A3, 0x0FA, 0x0AC, 0x0A4, 0x0E0, 0x0E2, 0x0A2, 0x0F2, 0x0AD, 0x0A1,
                0x0A3, 0x0F1, 0x0E6, 0x0A1, 0x0E2, 0x0E0, 0x0A3, 0x0FB, 0x0AC, 0x0E1, 0x0ED, 0x0B4,
                0x9E,  0x0B4, 0x0E0, 0x0FB, 0x0B4, 0x0E7, 0x0F1, 0x0F7, 0x0E6, 0x0F1, 0x0E0, 0x0B9,
                0x0F3, 0x0FB, 0x0F8, 0x0F0, 0x0E4, 0x0FC, 0x0F5, 0x0E6, 0x0F9, 0x0F5, 0x0B9, 0x0F7,
                0x0FB, 0x0FA, 0x0E0, 0x0F5, 0x0F7, 0x0E0, 0x0D4, 0x0E4, 0x0E6, 0x0FB, 0x0E0, 0x0FB,
                0x0FA, 0x0F9, 0x0F5, 0x0FD, 0x0F8, 0x0BA, 0x0F7, 0x0FB, 0x0F9, 0x0B4, 0x9E, 0xB4,
                0x0D7, 0x0DB, 0x0DA, 0x0D2, 0x0DD, 0x0D0, 0x0D1, 0x0DA, 0x0C0, 0x0DD, 0x0D5, 0x0D8
]

charset = 32.upto(126).map(&:chr).join + "\r\n\v\t"

0x10000.times{|k|
   x, y = k & 0xff, k >> 8
   data = ar.each_slice(2).map{|(a,b)| (a^x).chr+(b^y).chr}.join.chars
   if data.all?{|e| charset.include?(e) }
     puts data.join
   end
}
